<IfModule mod_rewrite.c>

	Options -MultiViews

	RewriteEngine On

	# Force HTTPS
	RewriteCond %{HTTPS} !on
	RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}

</IfModule>

<IfModule mod_filter.c>

	AddOutputFilterByType BROTLI_COMPRESS text/html text/plain text/xml text/css text/javascript application/javascript

</IfModule>

<IfModule mod_headers.c>

	Header set Access-Control-Allow-Origin "*"

	# Serve brotli compressed CSS and JS files if they exist and the client accepts brotli.
	RewriteCond "%{HTTP:Accept-encoding}" "br"
	RewriteCond "%{REQUEST_FILENAME}\.br" "-s"
	RewriteRule "^(.*)\.(js|css|html)"              "$1\.$2\.br" [QSA]

	# Serve correct content types, and prevent double compression.
	RewriteRule "\.css\.br$" "-" [T=text/css,E=no-brotli:1]
	RewriteRule "\.js\.br$"  "-" [T=text/javascript,E=no-brotli:1]
	RewriteRule "\.html\.br$"  "-" [T=text/html,E=no-brotli:1]

	# Serve pre-compressed gzip assets
	RewriteCond %{HTTP:Accept-Encoding} gzip
	RewriteCond %{REQUEST_FILENAME}.gz -f
	RewriteRule ^(.*)$ $1.gz [L]

	# Specify Brotli assets
	<FilesMatch "(\.js\.br|\.css\.br|\.html\.br)$">

		# Serve correct encoding type.
		Header append Content-Encoding br

		# Force proxies to cache brotli & non-brotli css/js files separately.
		Header append Vary Accept-Encoding

	</FilesMatch>

	<FilesMatch "\.html$">

		Header set Cache-Control "no-cache"

	</FilesMatch>

	<FilesMatch "\.js$">

		Header set Cache-Control "max-age=31536000, private"

	</FilesMatch>

	<FilesMatch "\.(css|json|webp|svg|jpg|jpeg|png|gif|bmp|cur)$">

		Header set Cache-Control "max-age=31536000"

	</FilesMatch>

	# Service worker
	<FilesMatch "\sw\.js$">

		Header set Cache-Control "max-age=0, no-cache"

	</FilesMatch>

</IfModule>
